[{"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\index.js":"1","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\App.js":"2","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\reportWebVitals.js":"3","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\Component\\Dictionary.js":"4","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\store.js":"5","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\reducers\\index.js":"6","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\actions\\types.js":"7","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\actions\\DicService.js":"8","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\Component\\Dictionaryitem.js":"9","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\reducers\\dicReduce.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":419,"mtime":1607989120875,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3136,"mtime":1608031859847,"results":"15","hashOfConfig":"12"},{"size":387,"mtime":1607965561446,"results":"16","hashOfConfig":"12"},{"size":135,"mtime":1607971429378,"results":"17","hashOfConfig":"12"},{"size":81,"mtime":1607965668378,"results":"18","hashOfConfig":"12"},{"size":436,"mtime":1608029920954,"results":"19","hashOfConfig":"12"},{"size":484,"mtime":1607984353888,"results":"20","hashOfConfig":"12"},{"size":581,"mtime":1607971424546,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5hyoew",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\index.js",[],["46","47"],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\App.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\reportWebVitals.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\Component\\Dictionary.js",["48"],"import React,{useEffect,useState} from 'react'\r\nimport { getwords } from \"../actions/DicService\"\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Fragment } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Dictionaryitem from './Dictionaryitem'\r\nimport Pic from './dic.jpg'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport {Nav,Navbar,Form,FormControl,Button} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst Dictionary=({getwords,dicReduce:{ dic, loading }})=>{\r\n    const [formdata, setFormData] = useState(0);\r\n    const [lang,setlaguageData]=useState(\"en\")\r\n    useEffect(() => {\r\n        getwords(lang,formdata)\r\n    }, [getwords])\r\n  \r\n   \r\n    let {\r\n        step\r\n    } = formdata;\r\n    const handleChange = (event,value) => {\r\n      let step = (value - 1) * 10\r\n       getwords(lang,step);\r\n       setFormData(step)\r\n   };\r\n   \r\n    const submit =language=>{\r\n     \r\n       setlaguageData(language.target.value)\r\n       \r\n      getwords(language.target.value,formdata)\r\n     }\r\n    \r\n   \r\nreturn (\r\n    <Fragment >{loading? <Container><Row className=\"justify-content-md-center\"><Col  md=\"auto\"><Spinner animation=\"border\" role=\"status\">\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </Spinner></Col></Row></Container> : <Fragment >\r\n  <Navbar bg=\"primary\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\"><img\r\n        src={Pic}\r\n        width=\"50\"\r\n        height=\"50\"\r\n        className=\"d-inline-block align-top\"\r\n        alt=\"React Bootstrap logo\"\r\n      /></Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <h4>Technical test</h4>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-light\">Search</Button>\r\n    </Form>\r\n  </Navbar>\r\n  \r\n  <Container>\r\n      <label>Select a language</label>\r\n  <select onChange={submit}>\r\n  <option value=\"en\" name=\"language\">En</option>\r\n  <option value=\"fr\"  name=\"language\">Fr</option>\r\n  \r\n</select>\r\n  <Table striped bordered hover className=\"mt-5\">\r\n  \r\n <thead>\r\n    <tr> \r\n      <th>Text</th>\r\n      <th>Pos</th>\r\n      <th>Sense</th> \r\n   \r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n         {\r\n         dic.length >0 ? (\r\n            dic && dic.map(dic=>(\r\n                <tr>\r\n            <Dictionaryitem key={dic.id} dicReduce={dic} /></tr>  \r\n    \r\n            )\r\n            )\r\n            ) : <h4>No words Found!</h4>}\r\n           </tbody>\r\n \r\n </Table>\r\n <Col md={{ span: 6, offset: 3 }}>\r\n                        <Pagination count={5} name=\"step\" page={step} onChange={handleChange}/>\r\n</Col>\r\n                        </Container>\r\n      \r\n  </Fragment> }\r\n    \r\n  </Fragment>\r\n)\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nDictionary.propTypes = {\r\n    getwords: PropTypes.func.isRequired,\r\n    dicReduce: PropTypes.object.isRequired,\r\n}\r\nconst mapStatToProps = state => ({\r\n    dicReduce: state.dicReduce\r\n})\r\nexport default connect(mapStatToProps, { getwords })(Dictionary)","C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\store.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\reducers\\index.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\actions\\types.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\actions\\DicService.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\Component\\Dictionaryitem.js",[],"C:\\Users\\SAFSAF\\Desktop\\KamiounProject-master\\clientside\\src\\reducers\\dicReduce.js",["49"],"import {WORDS_ERROR,GET_WORDS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    dic: [],\r\n    loading: true,\r\n\r\n}\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_WORDS:\r\n            return {\r\n                ...state,\r\n                dic: payload,\r\n                loading: false\r\n            }\r\n       \r\n        case WORDS_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":24,"column":8,"nodeType":"58","endLine":24,"endColumn":18,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":1,"nodeType":"62","endLine":27,"endColumn":2},{"ruleId":"52","replacedBy":"63"},{"ruleId":"54","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formdata' and 'lang'. Either include them or remove the dependency array.","ArrayExpression",["67"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [formdata, getwords, lang]",{"range":"70","text":"71"},[855,865],"[formdata, getwords, lang]"]